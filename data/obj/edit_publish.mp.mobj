our ($_class_cmeta, $m, $_m_buffer, $_interp);
BEGIN { 
local $_interp = Mason::Interp->current_load_interp;
$_interp->component_moose_class->import;
$_interp->component_import_class->import;
}
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/',
'interp' => $interp,
'is_top_level' => '1',
'object_file' => __FILE__,
'path' => '/edit_publish.mp',
'source_file' => 'C:/Users/gk70402/Desktop/cgipy/PerlProject/comps/edit_publish.mp',
);
}
sub _unset_class_cmeta { undef $_class_cmeta }
sub _class_cmeta { $_class_cmeta }
#line 1 "C:/Users/gk70402/Desktop/cgipy/PerlProject/comps/edit_publish.mp"
 has 'content';
has 'title';
use Article;

method handle () {
	  my $session = $m->req->session;
	  print $session;
      if ( ! $self->content  || ! $self->title  ) {
          $session->{message} = "Title and Content required.";
          $session->{form_data} =  $self->args ;
          $m->redirect('/edit_article');
      }
      my $article = Article->new
          (  $self->title ,   $self->content , create_time => time() );
      $article->save_edit_articles;
      $session->{message} = sprintf( "Article with the Title: '%s' saved.",  $self->title  );
      $m->redirect('/all_articles');
}
